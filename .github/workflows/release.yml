name: Build and Release

on:
  push:
    tags:
      - "v*"

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        target: [x86_64-pc-windows-msvc, x86_64-apple-darwin, x86_64-unknown-linux-gnu]
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: geema-x64_64.msi
          - platform: macos-latest
            target: x86_64-apple-darwin
            artifact_name: geema_x64.dmg
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: geema_x64.AppImage

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build application
        run: npm run build
        env:
          CARGO_TARGET_DIR: target

      - name: Build Tauri application
        run: npm run tauri build -- --target ${{ matrix.target }}
        env:
          CARGO_TARGET_DIR: target
          TAURI_PRIVATE_KEY: ${{ env.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ env.TAURI_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*/*.msi
            artifacts/*/*.dmg
            artifacts/*/*.AppImage
            artifacts/*/*.deb
            artifacts/*/*.rpm
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
