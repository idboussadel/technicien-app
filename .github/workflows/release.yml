name: Build and Release

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  version-bump:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.version.outputs.new-version }}
      new-tag: ${{ steps.version.outputs.new-tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Generate version and tag
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          # Generate new patch version
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version

          # Create and push tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          # Only push the tag, don't push the commit back to main
          git push origin "v$NEW_VERSION"

          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new-tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: [version-bump]
    if: always() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        platform: [windows-latest]
        target: [x86_64-pc-windows-msvc]
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: geema-x64_64.msi

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build application
        run: npm run build
        env:
          CARGO_TARGET_DIR: target

      - name: Build Tauri application
        run: npm run tauri build -- --target ${{ matrix.target }}
        env:
          CARGO_TARGET_DIR: target
          TAURI_PRIVATE_KEY: ${{ env.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ env.TAURI_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/

  release:
    needs: [build, version-bump]
    if: always() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version-bump.outputs.new-tag || github.ref_name }}
          name: Release ${{ needs.version-bump.outputs.new-tag || github.ref_name }}
          body: |
            ## What's New

            This is an automated release for version ${{ needs.version-bump.outputs.new-version || github.ref_name }}.

            ### Changes
            - Automated build and release
            - Built for Windows

            ### Downloads
            - Windows: Download the `.msi` installer

            ---

            *This release was automatically generated by GitHub Actions.*
          files: |
            artifacts/*/*.msi
          generate_release_notes: false
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
